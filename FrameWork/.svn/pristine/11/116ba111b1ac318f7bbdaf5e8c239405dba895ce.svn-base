using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.ComponentModel;
using System.Reflection;
using FrameWork.CustomeAttribute;


namespace FrameWork.EnumLst
{
    public enum dgvNavigateOptMode { FirstPage, NextPage, PreviosPage, LastPage, ByNumber }

    public enum BinaryOprator
    {
        [Caption("Equal", " يساوي")]
        [SqlSyntax("=")]
        Equal = 0,

        [Caption("Not Equal", "لا يساوي")]
        [SqlSyntax("!=")]
        NotEqual = 1,

        [WorkWithTypes(Sqltypes.Number, Sqltypes.DateTime, Sqltypes.Time)]
        [SqlSyntax("<")]
        [Caption("Less Than", "اقل من")]
        LessThan = 2,

        [WorkWithTypes(Sqltypes.Number, Sqltypes.DateTime, Sqltypes.Time)]
        [SqlSyntax(">")]
        [Caption("Greater Than", "اكبر من")]
        GreaterThan = 3,

        [WorkWithTypes(Sqltypes.Number, Sqltypes.DateTime, Sqltypes.Time)]
        [SqlSyntax("!<")]
        [Caption("Not Less Than", "ليس اقل من")]
        NotLessThan = 4,

        [SqlSyntax("!>")]
        [WorkWithTypes(Sqltypes.Number, Sqltypes.DateTime, Sqltypes.Time)]
        [Caption("Not Greater Than", "ليس اكبر من")]
        NotGreaterThan = 5,

        [SqlSyntax("<=")]
        [WorkWithTypes(Sqltypes.Number, Sqltypes.DateTime, Sqltypes.Time)]
        [Caption("Less Than Or Equal To", "اقل من او يساوي")]
        LessThanOrEqualTo = 6,

        [SqlSyntax(">=")]
        [WorkWithTypes(Sqltypes.Number, Sqltypes.DateTime, Sqltypes.Time)]
        [Caption("Greater Than Or Equal To", "اكبر من او يساوي")]
        GreaterThanOrEqualTo = 7,

        [WorkWithTypes(Sqltypes.Text)]
        [SqlSyntax("like")]
        [Caption("Contains", "يحتوي علي")]
        Contains = 8,

        [WorkWithTypes(Sqltypes.Text, Sqltypes.DateTime, Sqltypes.Time)]
        [SqlSyntax("NoT like")]
        [Caption("Not Contains", "لا يحتوي علي")]
        NotContains = 9,

        [SqlSyntax("Between")]
        [Caption("between", " بين")]
        [WorkWithTypes(Sqltypes.Number, Sqltypes.DateTime, Sqltypes.Time)]
        between = 10,

        [WorkWithTypes(Sqltypes.DateTime)]
        [SqlSyntax("Month")]
        [Caption("Month", "شهر")]
        Month = 11,

        [WorkWithTypes(Sqltypes.DateTime)]
        [SqlSyntax("Day")]
        [Caption("Day", "يوم")]
        Day = 12,

        [WorkWithTypes(Sqltypes.DateTime)]
        [SqlSyntax("Year")]
        [Caption("Year", "سنة")]
        Year = 13,

        [WorkWithTypes(Sqltypes.DateTime )]
        [SqlSyntax("betweenTwoMonths")]
        [Caption("between Two Months", "بين شهرين")]
        betweenTwoMonths = 14,

        [WorkWithTypes(Sqltypes.DateTime)]
        [SqlSyntax("betweenTwoYears")]
        [Caption("between Two Years", "بين سنتين")]
        betweenTwoYears = 15

    }

    public enum LogicalOperator
    {
        [Caption("And", "او")]
        [SqlSyntax("And")]
        And = 0,
        [SqlSyntax("OR")]
        [Caption("OR", "و")]
        OR = 1
    }

    public enum Sqltypes
    {
        Number, Text, DateTime, Time, All
    }

    public enum Months
    {
        [Caption("January", "يناير")]
        January = 1,
        [Caption("February", "فبراير")]
        February = 2,
        [Caption("March", "مارس")]
        March = 3,
        [Caption("April", "ابريل")]
        April = 4,
        [Caption("May", "مايو")]
        May = 5,
        [Caption("June", "يونيو")]
        June = 6,
        [Caption("July", "يوليو")]
        July = 7,
        [Caption("August", "اغسطس")]
        August = 8,
        [Caption("September", "سبتمبر")]
        September = 9,
        [Caption("October", "اكتوبر")]
        October = 10,
        [Caption("November", "نوفمبر")]
        November = 11,
        [Caption("December", "ديسمبر")]
        December = 12
    }

    public enum Languages { Arabic , English }

    public enum MatchType { Equal, StartWith, StartOrEndWith }

    public enum MathSummaryFunctions
    {
        Avrage = 0 ,
        Sum = 1,
        Min = 2,
        Max = 3,
        Count = 4
    }

    public enum RelationFillMode { None, OneToManySummaryOnly, OneToManyNormalOnly, All }

    public enum AppDbType
    {
        Admin,Account,test
    }

    public enum PlaceType
    {
        Country=1,Area=2,City=3
    }
}

 